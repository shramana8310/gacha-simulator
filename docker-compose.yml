version: '3'
services:
  web:
    container_name: web
    build: ./web
    ports:
      - 80:80
    restart: on-failure
    environment:
      - SERVER_NAME=localhost
    volumes:
      - web:/web
    depends_on:
      - app
    networks:
      - gacha-simulator-network
    command: /bin/sh -c "envsubst '$${SERVER_NAME}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

  app:
    container_name: app
    build: ./app
    ports:
      - 8080:8080
    restart: on-failure
    environment:
      - GACHA_ENV=development
      - DATABASE_URL=postgres://gachaapp:password@postgres:5432/gachadb
      - OAUTH_PUBLIC_CLIENT_DOMAIN=http://localhost
      - OAUTH_PRIVATE_CLIENT_ID=private_client_id
      - OAUTH_PRIVATE_CLIENT_SECRET=private_client_secret
    volumes:
      - app:/usr/src/app/
    depends_on:
      wait-for-postgres:
        condition: service_completed_successfully
    networks:
      - gacha-simulator-network

  wait-for-postgres:
    container_name: wait-for-postgres
    image: atkrad/wait4x
    depends_on:
      - postgres
    command: tcp postgres:5432 -t 10m -i 10s
    networks:
      - gacha-simulator-network

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=gachaapp
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=gachadb
    volumes:
      - postgres:/var/lib/postgres
    networks:
      - gacha-simulator-network

volumes:
  web:
  app:
  postgres:

networks:
  gacha-simulator-network:
    driver: bridge